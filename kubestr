# ────────────────────────────────────────────────────────────────────
# Global Cluster Settings
# ────────────────────────────────────────────────────────────────────
cluster_name: "datalake-compute-prod"
dns_domain: "cluster.local"
kube_version: "1.33.3"
container_manager: "containerd"
kube_proxy_remove: true
kubeconfig_localhost: true
kube_network_plugin: none
kube_network_plugin_multus: false
kube_service_addresses: "10.116.192.0/20"
kube_pods_subnet: ""10.116.0.0/17"" 
kubelet_max_pods: 110
kube_network_node_prefix: 24
cilium_version: 1.18.1
kube_proxy_mode: iptables
kube_proxy_strict_arp: false
kube_proxy_deployed: false
cilium_kube_proxy_replacement: true
ndots: 2
dns_mode: coredns
enable_nodelocaldns: false
enable_nodelocaldns_secondary: false
nodelocaldns_ip: 169.254.25.10
nodelocaldns_health_port: 9254
nodelocaldns_second_health_port: 9256
nodelocaldns_bind_metrics_host_ip: false
nodelocaldns_secondary_skew_seconds: 5
kubernetes_audit: false
bin_dir: "/usr/bin"
# ────────────────────────────────────────────────────────────────────
# Control Plane
# ────────────────────────────────────────────────────────────────────

# Offline / Repository Settings
unsafe_show_logs: true
kubectl_localhost: true
image_is_cached: false
files_repo: "http://10.145.65.116:8080/kube-1.33.3"
skip_downloads: false
download_localhost: false
nerdctl_image_pull_command: "{{ bin_dir }}/nerdctl -n k8s.io pull --quiet --insecure-registry"
#download_delegate: "pkgsrvr"
github_url: "http://10.145.65.116:8080/kube-1.33.3/github.com"
dl_k8s_io_url: "http://10.145.65.116:8080/kube-1.33.3/dl.k8s.io"
storage_googleapis_url: "http://10.145.65.116:8080/kube-1.33.3/storage.googleapis.com"
get_helm_url: "http://10.145.65.116:8080/kube-1.33.3/get.helm.sh"

download_once: true
download_force_cache: true
download_validate_certs: false
registry_host: "10.145.65.116:5000"
download.container: true
kube_image_repo: "{{ registry_host }}"
gcr_image_repo: "nexus.skhynix.com:12000"
github_image_repo: "{{ registry_host }}"
docker_image_repo: "nexus.skhynix.com:12000"
quay_image_repo: "nexus.skhynix.com:12000"
yum_repo_dir: "/etc/yum.repos.d/"
docker_rh_repo_gpgkey: ""
docker_rh_repo_base_url: "http://nexus.skhynix.com:8080/repository/RHEL9-proxy/"

# ────────────────────────────────────────────────────────────────────
# Container Runtime Settings
# ────────────────────────────────────────────────────────────────────
containerd_storage_dir: "/data01/containerd"
containerd_state_dir: "/run/containerd"
containerd_oom_score: 0
containerd_default_runtime: "runc"
containerd_snapshotter: "native"

containerd_runc_runtime:
  name: runc
  type: "io.containerd.runc.v2"
  engine: ""
  root: ""
  base_runtime_spec: cri-base.json
  options:
    SystemdCgroup: "{{ containerd_use_systemd_cgroup | ternary('true', 'false') }}"
    BinaryName: "{{ bin_dir }}/runc"

containerd_registries_mirrors:
  - prefix: docker.io
    mirrors:
      - host: https://nexus.skhynix.com:12000
        capabilities: ["pull", "resolve"]
        skip_verify: true
    server: https://nexus.skhynix.com:12000
  - prefix: gcr.io
    mirrors:
      - host: https://nexus.skhynix.com:12000
        capabilities: ["pull", "resolve"]
        skip_verify: true
    server: https://nexus.skhynix.com:12000
  - prefix: quay.io
    mirrors:
      - host: https://nexus.skhynix.com:12000
        capabilities: ["pull", "resolve"]
        skip_verify: true
    server: https://nexus.skhynix.com:12000
  - prefix: k8s.gcr.io
    mirrors:
      - host: https://nexus.skhynix.com:12000
        capabilities: ["pull", "resolve"]
        skip_verify: true
    server: https://nexus.skhynix.com:12000
  - prefix: registry.k8s.io
    mirrors:
      - host: http://10.145.65.116:5000
        capabilities: ["pull", "resolve"]
        skip_verify: true
    server: http://10.145.65.116:5000
  - prefix: ghcr.io
    mirrors:
      - host: http://10.145.65.116:5000
        capabilities: ["pull", "resolve"]
        skip_verify: true
    server: http://10.145.65.116:5000
  - prefix: 10.145.65.116:5000
    mirrors:
      - host: http://10.145.65.116:5000
        capabilities: ["pull", "resolve"]
        skip_verify: true
    server: http://10.145.65.116:5000
  - prefix: icbigstg-01-01:5000 
    mirrors: 
    - host: http://icbigstg-01-01:5000 
      capabilities: ["pull", "resolve"] 
      skip_verify: true 
  - prefix: icbigstg-01-01:5001 
    mirrors: 
    - host: http://icbigstg-01-01:5001 
      capabilities: ["pull", "resolve"] 
      skip_verify: true 
  - prefix: icbigstg-01-01:5002 
    mirrors: 
    - host: http://icbigstg-01-01:5002 
      capabilities: ["pull", "resolve"]
# ────────────────────────────────────────────────────────────────────
# Etcd Settings
# ────────────────────────────────────────────────────────────────────
etcd_deployment_type: host
etcd_data_dir: /data01/lib/etcd/data
etcd_memory_limit: "8192M"
etcd_max_request_bytes: "10485760"
quota-backend-bytes: "8589934592"        # 8 GiB
auto-compaction-retention: "24h"        # 1시간 단위 자동 컴팩션
etcd_heartbeat_interval: 270                # 270 ms
etcd_election_timeout: 2700                 # 2.7 s
etcd_wal_dir: /data01/lib/etcd/wal
etcd_events_data_dir: /data01/lib/etcd/event



# ────────────────────────────────────────────────────────────────────
# Scheduler Settings
# ────────────────────────────────────────────────────────────────────
#default 값 사용
kube_controller_manager_leader_elect_lease_duration: 30s
kube_controller_manager_leader_elect_renew_deadline: 20s
kube_controller_manager_leader_elect_renew_deadline: 10s
kube_profiling: "true"
#tuning 값 사용
kube_kubeadm_controller_extra_args:
  concurrent-gc-syncs: 200
  concurrent-deployment-syncs: 50
  concurrent-endpoint-syncs : 50
  concurrent-replicaset-syncs : 50
  concurrent-rc-sync: 50
  concurrent-replicaset-syncs: 50
  concurrent-namespace-syncs: 50
  concurrent-service-syncs: 50
  concurrent-job-syncs s: 50
  kube-api-qps: 150
  kube-api-burst: 300

# ────────────────────────────────────────────────────────────────────
# KubeScheudler
# ────────────────────────────────────────────────────────────────────
kube_scheduler_client_conn_extra_opts:
  qps: 150
  burst: 300
  

# ────────────────────────────────────────────────────────────────────
# Kubelet
# ────────────────────────────────────────────────────────────────────
kubelet_config_extra_args:
  kubeAPIQPS: 150
  kubeAPIBurst: 300

kube_reserved: true
kube_memory_reserved: "2Gi"
kube_cpu_reserved: "1000m"
kube_ephemeral_storage_reserved: "10Gi"
kube_pid_reserved: "1000"

# Set to true to reserve resources for system daemons
system_reserved: true
system_memory_reserved: "2Gi"
system_cpu_reserved: "1000m"
system_ephemeral_storage_reserved: "10Gi"
system_pid_reserved: 1000

# ────────────────────────────────────────────────────────────────────
# API Server
# ────────────────────────────────────────────────────────────────────
kube_kubeadm_apiserver_extra_args:
  max_requests_inflight: 400
  max-mutating-requests-inflight: 800

supplementary_addresses_in_ssl_keys:
  - "additional_ip"
# ────────────────────────────────────────────────────────────────────
# Add-on Settings
# ────────────────────────────────────────────────────────────────────
local_volume_provisioner_enabled: false
deploy_coredns: true
cert_manager_enabled: true
metrics_server_enabled: true
dashboard_enabled: false


# ────────────────────────────────────────────────────────────────────
# DNS Settings
# ────────────────────────────────────────────────────────────────────

disable_host_nameservers: true # Prevent modify etc/resolve.conf from kubespray	

# ────────────────────────────────────────────────────────────────────
# Miscellaneous Settings
# ────────────────────────────────────────────────────────────────────
kubeconfig_localhost: true # generate kubeconfig on control node
download_run_once: true # download binaries only once per host

# ────────────────────────────────────────────────────────────────────
Kubeadm Patches
# ────────────────────────────────────────────────────────────────────
kubeadm_patches:
  - target:
      version: v1
      kind: Pod
      name: kube-apiserver
      namespace: kube-system
    patch: |
      spec:
        containers:
        - name: kube-apiserver
          resources:
            requests:
              memory: "20Gi"
            limits:
              cpu: "16"
              memory: "20Gi"
